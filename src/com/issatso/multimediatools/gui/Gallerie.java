/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.issatso.multimediatools.gui;

import com.issatso.multimediatools.assets.SettingsLoader;
import java.awt.Dimension;
import java.awt.Font;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author fathi jemli
 */
public class Gallerie extends javax.swing.JInternalFrame {

    /**
     * Creates new form Gallerie
     */
    public Gallerie() {
        initComponents();
        jSplitPane1.setDividerLocation(200);
        settingsLoader = new SettingsLoader();
        settings = settingsLoader.loadSettings();
        //System.out.println(settings.get("rootDirectory"));
        setSize(500, 550);
        listRoot();
        //jScrollPane1.setPreferredSize(new Dimension(200, this.getSize().height));
        jTree2.setRootVisible(true);
        jTree2.setVisibleRowCount(1000);
        jTree2.putClientProperty("JTree.lineStyle", "Angled");
        jTree2.setToolTipText("the tree describe your hard-disk");
        jTree2.setFont(new Font("Century Gothic", Font.BOLD, 10));
        System.out.println(jTree2.getRowCount());

    }

    class GalerieTreeSelectionListener implements TreeSelectionListener {

        @Override
        public void valueChanged(TreeSelectionEvent e) {
            System.out.println("listener");
        }

        private String getAbsolutePath(TreePath treePath) {
            String str = "";
            for (Object name : treePath.getPath()) {
                if (name.toString() != null) {
                    str += name.toString();
                }
            }
            return str;
        }
    }

    private void listRoot() {
        DefaultMutableTreeNode racine = new DefaultMutableTreeNode();
        System.out.println("listRoot");
        File root = new File(settings.get("rootDirectory"));
        System.out.println(root.getAbsolutePath());
        for (File fils : root.listFiles()) {
            System.out.println(fils.getAbsolutePath());
            DefaultMutableTreeNode node = new DefaultMutableTreeNode(fils.getName() + "\\");
            racine.add(node);
            //node.add(listFile(fils, node));
            try {
                DefaultMutableTreeNode node2;
                for (File nom : fils.listFiles()) {
                    node2 = new DefaultMutableTreeNode(nom.getName() + "\\");
                    node.add(node2);
                    node.add(listFile(nom, node2));
                }
            } catch (NullPointerException e) {
                e.printStackTrace();
            }
            racine.add(node);
        }
        jTree2 = new JTree(racine);
        validate();
        //revalidate();
        //repaint();
    }

    private DefaultMutableTreeNode listFile(File file, DefaultMutableTreeNode node) {
        int count = 0;
        if (file.isFile()) {
            return new DefaultMutableTreeNode(file.getName());
        } else {
            File[] files
                    = file.listFiles();
            if (files == null) {
                return new DefaultMutableTreeNode(file.getName());
            }
            for (File f : files) {
                count++;
                if (count < 10) {
                    DefaultMutableTreeNode subNode;
                    if (f.isDirectory()) {
                        subNode = new DefaultMutableTreeNode(f.getName() + "\\");
                        node.add(listFile(f, subNode));
                    } else {
                        subNode = new DefaultMutableTreeNode(f.getName());
                    }
                    node.add(subNode);
                }
            }
        }
        return node;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree2 = new javax.swing.JTree();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gallery");
        setToolTipText("");

        jSplitPane1.setName("jSplitPane1"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Multimedia-tools");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("photos");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("videos");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("audios");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("texts");
        treeNode1.add(treeNode2);
        jTree2.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree2.setName("jTree2"); // NOI18N
        jTree2.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree2ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jTree2);

        jSplitPane1.setLeftComponent(jScrollPane2);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTree2ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree2ValueChanged
        System.out.println("valuechanged");
        File selectedFile = new File(getAbsolutePath(evt.getPath()));
        System.out.println("selected node: " + selectedFile.getAbsolutePath());
        if (selectedFile.isDirectory()) {
            TreePath treePath = jTree2.getSelectionPath();
            DefaultMutableTreeNode parent = (DefaultMutableTreeNode) treePath
                    .getLastPathComponent();
            for (File fichier : selectedFile.listFiles()) {
                DefaultMutableTreeNode son = new DefaultMutableTreeNode(
                        fichier.getName() + "\\");
                parent.add(son);
                jTree2.scrollPathToVisible(new TreePath(son.getPath()));
                ((DefaultTreeModel) jTree2.getModel()).reload(parent);
            }

        } else {

        }
    }//GEN-LAST:event_jTree2ValueChanged

    public String getAbsolutePath(TreePath treePath) {
        String str = "";
        for (Object name : treePath.getPath()) {
            if (name.toString() != null) {
                str += name.toString();
            }
        }
        return str;
    }

    private SettingsLoader settingsLoader;
    private Map<String, String> settings = new HashMap<String, String>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTree jTree2;
    // End of variables declaration//GEN-END:variables
}
